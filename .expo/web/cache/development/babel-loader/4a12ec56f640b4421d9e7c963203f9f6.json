{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"/Users/ernestang98/Downloads/capstone-project/components/FocusComponent.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport * as React from 'react';\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport ImageBackground from \"react-native-web/dist/exports/ImageBackground\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { CheckBox } from 'react-native-elements';\nimport moment from \"moment\";\nimport AppLoading from 'expo-app-loading';\nimport * as Font from 'expo-font';\nvar interval = [];\nvar counter = 0;\nvar image = {\n  uri: \"https://i.pinimg.com/originals/c2/dd/7b/c2dd7bf1a4602978cb41f154d551a5ff.jpg\"\n};\n\nvar FocusComponent = function (_React$Component) {\n  _inherits(FocusComponent, _React$Component);\n\n  var _super = _createSuper(FocusComponent);\n\n  function FocusComponent(props) {\n    var _this;\n\n    _classCallCheck(this, FocusComponent);\n\n    _this = _super.call(this, props);\n\n    _this.stopTimer = function () {\n      counter = 0;\n\n      for (var i = 0; i < interval.length; i++) {\n        clearInterval(interval[i]);\n      }\n    };\n\n    _this.startTimer = function () {\n      counter += 1;\n\n      if (counter === 1) {\n        var x = setInterval(function () {\n          var eventDate = _this.state.eventDate;\n\n          if (eventDate <= 0) {\n            clearInterval(x);\n          } else {\n            eventDate = eventDate.subtract(1, \"s\");\n            var days = eventDate.days();\n            var hours = eventDate.hours();\n            var mins = eventDate.minutes();\n            var secs = eventDate.seconds();\n\n            _this.setState({\n              days: days,\n              hours: hours,\n              mins: mins,\n              secs: secs,\n              eventDate: eventDate\n            });\n          }\n        }, 1000);\n        interval.push(x);\n      }\n    };\n\n    _this.resetTimer = function () {\n      counter = 0;\n\n      for (var i = 0; i < interval.length; i++) {\n        clearInterval(interval[i]);\n      }\n\n      _this.setState({\n        eventDate: moment.duration().add({\n          days: 0,\n          hours: 0,\n          minutes: 25,\n          seconds: 0\n        }),\n        days: 0,\n        hours: 0,\n        mins: 25,\n        secs: \"00\"\n      });\n    };\n\n    if (props.navigation.state.params === undefined) {\n      _this.state = {\n        eventDate: moment.duration().add({\n          days: 0,\n          hours: 0,\n          minutes: 25,\n          seconds: \"00\"\n        }),\n        days: 0,\n        hours: 0,\n        data: [],\n        mins: 25,\n        secs: \"00\",\n        task: \"Default Task\",\n        id: 0,\n        fontsLoaded: false\n      };\n    } else {\n      console.log(props.navigation.state.params);\n      _this.state = {\n        eventDate: moment.duration().add({\n          days: 0,\n          hours: 0,\n          minutes: propsMin,\n          seconds: propsSec\n        }),\n        days: 0,\n        hours: 0,\n        data: propsData,\n        mins: propsMin,\n        secs: propsSec,\n        task: propsTask,\n        id: propsId\n      };\n    }\n\n    return _this;\n  }\n\n  _createClass(FocusComponent, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      Font.loadAsync({\n        'FredokaOne-Regular': require(\"../assets/fonts/FredokaOne-Regular.ttf\")\n      }).then(function () {\n        return _this2.setState({\n          fontsLoaded: true\n        });\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      var _this$state = this.state,\n          mins = _this$state.mins,\n          secs = _this$state.secs;\n      return React.createElement(View, {\n        style: styles.container\n      }, React.createElement(ImageBackground, {\n        source: image,\n        style: styles.image,\n        imageStyle: {\n          opacity: 0.5\n        }\n      }, React.createElement(View, {\n        style: styles.back\n      }, React.createElement(TouchableOpacity, {\n        onPress: function onPress() {\n          counter = 0;\n\n          for (var i = 0; i < interval.length; i++) {\n            clearInterval(interval[i]);\n          }\n\n          console.log(_this3.state.mins);\n          console.log(_this3.state.secs);\n          console.log(_this3.state.id);\n          var data = _this3.state.data;\n\n          for (var _i = 0; _i < data.length; _i++) {\n            if (data[_i].id === _this3.state.id) {\n              data[_i].minute = _this3.state.mins;\n              data[_i].second = _this3.state.secs;\n            }\n          }\n\n          console.log(data);\n\n          _this3.props.navigation.navigate('Dashboard', {\n            array: data\n          });\n        }\n      }, React.createElement(Text, null, \"Back\"))), React.createElement(View, {\n        style: styles.top\n      }, React.createElement(TouchableOpacity, {\n        onPress: this.startTimer\n      }, React.createElement(Text, null, \"Start\")), React.createElement(TouchableOpacity, {\n        onPress: this.stopTimer\n      }, React.createElement(Text, null, \"Stop\")), React.createElement(TouchableOpacity, {\n        onPress: this.resetTimer\n      }, React.createElement(Text, null, \"Reset\"))), React.createElement(View, {\n        style: styles.middle\n      }, React.createElement(Text, {\n        style: styles.timer\n      }, mins + \" : \" + secs)), React.createElement(View, {\n        style: styles.bottom\n      }, React.createElement(TouchableOpacity, {\n        onPress: function onPress() {\n          counter = 0;\n\n          for (var i = 0; i < interval.length; i++) {\n            clearInterval(interval[i]);\n          }\n\n          console.log(_this3.state.mins);\n          console.log(_this3.state.secs);\n          console.log(_this3.state.id);\n          var data = _this3.state.data;\n\n          for (var _i2 = 0; _i2 < data.length; _i2++) {\n            if (data[_i2].id === _this3.state.id) {\n              data[_i2].minute = _this3.state.mins;\n              data[_i2].second = _this3.state.secs;\n              data[_i2].checked = true;\n            }\n          }\n\n          console.log(data);\n\n          _this3.props.navigation.navigate('Dashboard', {\n            array: data\n          });\n        }\n      }, React.createElement(Text, null, \"CHECKBOX\")), React.createElement(Text, null, this.state.task))));\n    }\n  }]);\n\n  return FocusComponent;\n}(React.Component);\n\nvar styles = StyleSheet.create({\n  image: {\n    flex: 1,\n    resizeMode: \"cover\",\n    justifyContent: \"center\"\n  },\n  container: {\n    flex: 1,\n    backgroundColor: \"white\",\n    justifyContent: \"center\"\n  },\n  back: {\n    position: \"relative\",\n    bottom: 150,\n    left: 50\n  },\n  top: {\n    marginRight: 60,\n    flexDirection: 'row',\n    alignItems: \"flex-end\",\n    justifyContent: \"flex-end\"\n  },\n  middle: {\n    alignItems: \"center\",\n    justifyContent: \"center\"\n  },\n  bottom: {\n    flexDirection: 'row',\n    alignItems: \"center\",\n    justifyContent: \"space-evenly\"\n  },\n  timer: {\n    fontFamily: 'FredokaOne-Regular',\n    fontSize: 80,\n    fontWeight: \"bold\"\n  }\n});\nexport default FocusComponent;","map":{"version":3,"sources":["/Users/ernestang98/Downloads/capstone-project/components/FocusComponent.js"],"names":["React","CheckBox","moment","AppLoading","Font","interval","counter","image","uri","FocusComponent","props","stopTimer","i","length","clearInterval","startTimer","x","setInterval","eventDate","state","subtract","days","hours","mins","minutes","secs","seconds","setState","push","resetTimer","duration","add","navigation","params","undefined","data","task","id","fontsLoaded","console","log","propsMin","propsSec","propsData","propsTask","propsId","loadAsync","require","then","styles","container","opacity","back","minute","second","navigate","array","top","middle","timer","bottom","checked","Component","StyleSheet","create","flex","resizeMode","justifyContent","backgroundColor","position","left","marginRight","flexDirection","alignItems","fontFamily","fontSize","fontWeight"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport { Text, View, StyleSheet, Button, ImageBackground, TouchableOpacity } from 'react-native';\nimport { CheckBox } from 'react-native-elements';\nimport moment from \"moment\";\nimport AppLoading from 'expo-app-loading';\nimport * as Font from 'expo-font';\n\nlet interval = []\n\nlet counter = 0\n\nconst image = { uri: \"https://i.pinimg.com/originals/c2/dd/7b/c2dd7bf1a4602978cb41f154d551a5ff.jpg\" };\n\nclass FocusComponent extends React.Component {\n\n  constructor(props) {\n    super(props)\n\n    if (props.navigation.state.params === undefined) {\n      this.state = {\n        eventDate:moment.duration().add({days:0,hours:0,minutes:25,seconds:\"00\"}),\n        days:0,\n        hours:0,\n        data: [],\n        mins: 25,\n        secs: \"00\",\n        task: \"Default Task\",\n        id: 0,\n        fontsLoaded: false,\n      }\n    }\n    else {\n      console.log(props.navigation.state.params)\n      // let propsMin = parseInt(props.navigation.state.params.minute)\n      // let propsSec = props.navigation.state.params.second\n      // let propsTask = props.navigation.state.params.task\n      // let propsData = props.navigation.state.params.data\n      // let propsId = props.navigation.state.params.id\n      this.state = {\n        eventDate:moment.duration().add({days:0,hours:0,minutes:propsMin,seconds:propsSec}),\n        days:0,\n        hours:0,\n        data: propsData,\n        mins: propsMin,\n        secs: propsSec,\n        task: propsTask,\n        id: propsId\n      }\n    }\n  }\n\n  componentDidMount() {\n    Font.loadAsync({\n      'FredokaOne-Regular': require('../assets/fonts/FredokaOne-Regular.ttf')\n    }).then(() => this.setState( { fontsLoaded: true } ) )\n  }\n\n  stopTimer=()=> {\n    counter = 0\n    for (let i = 0; i < interval.length; i++) {\n        clearInterval(interval[i])\n    }\n  }\n\n  startTimer=()=>{\n    counter += 1\n    if (counter === 1) {\n      const x=setInterval(()=>{\n      let {eventDate} = this.state\n      if(eventDate <=0){\n        clearInterval(x)\n      }\n      else {\n        eventDate = eventDate.subtract(1,\"s\")\n        const days = eventDate.days()\n        const hours = eventDate.hours()\n        const mins = eventDate.minutes()\n        const secs = eventDate.seconds()\n        \n        this.setState({\n          days,\n          hours,\n          mins,\n          secs,\n          eventDate\n        })\n      }\n    },1000)\n    interval.push(x)\n    }\n  }\n\n  resetTimer=()=> {\n    counter = 0\n    for (let i = 0; i < interval.length; i++) {\n        clearInterval(interval[i])\n    }\n    this.setState({\n      eventDate:moment.duration().add({days:0,hours:0,minutes:25,seconds:0}),\n      days: 0,\n      hours: 0,\n      mins: 25,\n      secs: \"00\"\n    })\n  }\n\n  render() {\n    const { mins, secs } = this.state\n  \n    return (\n      <View style={styles.container}>\n        <ImageBackground source={image} style={styles.image} imageStyle={{opacity:0.5}}>\n          <View style={styles.back}>\n            <TouchableOpacity onPress={() => {  counter = 0\n                                                for (let i = 0; i < interval.length; i++) {\n                                                            clearInterval(interval[i])\n                                                        }\n                                                  console.log(this.state.mins)\n                                                  console.log(this.state.secs)\n                                                  console.log(this.state.id)\n                                                let data = this.state.data\n                                                for (let i = 0; i<data.length; i++) {\n                                                  if (data[i].id === this.state.id) {\n                                                    data[i].minute = this.state.mins\n                                                    data[i].second = this.state.secs\n                                                  }\n                                                }\n                                                console.log(data)\n                                                this.props.navigation.navigate('Dashboard', \n                                                {array:data})}\n                                                }>\n              <Text>Back</Text>\n            </TouchableOpacity>\n          </View>\n          <View style={styles.top}>\n            <TouchableOpacity onPress={this.startTimer}>\n              <Text>Start</Text>\n            </TouchableOpacity>\n            <TouchableOpacity onPress={this.stopTimer}>\n              <Text>Stop</Text>\n            </TouchableOpacity>\n            <TouchableOpacity onPress={this.resetTimer}>\n              <Text>Reset</Text>\n            </TouchableOpacity>\n          </View>\n          <View style={styles.middle}>\n            <Text style={styles.timer}>{ `${mins} : ${secs}`}</Text>\n          </View>\n          <View style={styles.bottom}>\n            <TouchableOpacity onPress={() => {  counter = 0\n                                                for (let i = 0; i < interval.length; i++) {\n                                                            clearInterval(interval[i])\n                                                        }\n                                                  console.log(this.state.mins)\n                                                  console.log(this.state.secs)\n                                                  console.log(this.state.id)\n                                                let data = this.state.data\n                                                for (let i = 0; i<data.length; i++) {\n                                                  if (data[i].id === this.state.id) {\n                                                    data[i].minute = this.state.mins\n                                                    data[i].second = this.state.secs\n                                                    data[i].checked = true\n                                                  }\n                                                }\n                                                console.log(data)\n                                                this.props.navigation.navigate('Dashboard', \n                                                {array:data})}\n                                                }>\n              <Text>CHECKBOX</Text>\n            </TouchableOpacity>\n            <Text>{this.state.task}</Text>\n          </View>\n        </ImageBackground>\n      </View>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  image: {\n    flex: 1,\n    resizeMode: \"cover\",\n    justifyContent: \"center\"\n  },\n  container: {\n    flex: 1,\n    backgroundColor: \"white\",\n    justifyContent: \"center\",\n  },\n  back: {\n    position: \"relative\",\n    bottom: 150,\n    left: 50\n  },\n  top: {\n    marginRight: 60,\n    flexDirection: 'row',\n    alignItems: \"flex-end\",\n    justifyContent: \"flex-end\",\n  },\n  middle: {\n    alignItems: \"center\",\n    justifyContent: \"center\",\n  },\n  bottom: {\n    flexDirection: 'row',\n    alignItems: \"center\",\n    justifyContent: \"space-evenly\",\n  },\n  timer: {\n    fontFamily: 'FredokaOne-Regular',\n    fontSize: 80,\n    fontWeight: \"bold\"\n  }\n});\n\nexport default FocusComponent;"]},"metadata":{},"sourceType":"module"}