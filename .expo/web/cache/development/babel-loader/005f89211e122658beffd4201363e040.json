{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"/Users/ernestang98/Downloads/capstone-project/components/CreateUpdateComponent.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport * as React from 'react';\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport ImageBackground from \"react-native-web/dist/exports/ImageBackground\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\n\nvar CreateUpdateComponent = function (_React$Component) {\n  _inherits(CreateUpdateComponent, _React$Component);\n\n  var _super = _createSuper(CreateUpdateComponent);\n\n  function CreateUpdateComponent(props) {\n    var _this;\n\n    _classCallCheck(this, CreateUpdateComponent);\n\n    _this = _super.call(this, props);\n\n    _this.onChangeText = function (e) {\n      console.log(e.target.value);\n\n      _this.setState({\n        input: e.target.value\n      });\n    };\n\n    _this.state = {\n      itemList: _this.props.navigation.state.params.itemList,\n      input: \"Add a task\",\n      buttonType: _this.props.navigation.state.params.buttonType\n    };\n    return _this;\n  }\n\n  _createClass(CreateUpdateComponent, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(View, {\n        style: styles.container\n      }, React.createElement(TextInput, {\n        style: styles.input,\n        value: this.state.input,\n        onChangeText: function onChangeText(searchtext) {\n          return _this2.setState({\n            input: searchtext\n          });\n        }\n      }), React.createElement(TouchableOpacity, {\n        onPress: function onPress() {\n          var arr = _this2.state.itemList;\n          var temp = [];\n          var largest = 0;\n\n          for (var i = 0; i < _this2.state.itemList.length; i++) {\n            if (parseInt(_this2.state.itemList[i].id) > largest) {\n              largest = _this2.state.itemList[i].id;\n            }\n          }\n\n          if (_this2.state.input !== \"\") {\n            arr.push({\n              id: largest + 1,\n              task: _this2.state.input,\n              checked: false,\n              minute: 25,\n              second: \"00\"\n            });\n\n            _this2.props.navigation.navigate('Dashboard', {\n              array: arr\n            });\n          } else {\n            _this2.props.navigation.navigate('Dashboard', {\n              array: _this2.state.itemList\n            });\n          }\n        }\n      }, React.createElement(Text, null, this.state.buttonType)));\n    }\n  }]);\n\n  return CreateUpdateComponent;\n}(React.Component);\n\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    flexDirection: \"row\",\n    alignItems: \"center\",\n    justifyContent: \"center\"\n  },\n  input: {\n    marginRight: 10,\n    height: 20,\n    borderColor: 'gray',\n    borderWidth: 1\n  }\n});\nexport default CreateUpdateComponent;","map":{"version":3,"sources":["/Users/ernestang98/Downloads/capstone-project/components/CreateUpdateComponent.js"],"names":["React","CreateUpdateComponent","props","onChangeText","e","console","log","target","value","setState","input","state","itemList","navigation","params","buttonType","styles","container","searchtext","arr","temp","largest","i","length","parseInt","id","push","task","checked","minute","second","navigate","array","Component","StyleSheet","create","flex","flexDirection","alignItems","justifyContent","marginRight","height","borderColor","borderWidth"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport { Text, View, StyleSheet, Button, ImageBackground, TouchableOpacity, TextInput } from 'react-native';\n\nclass CreateUpdateComponent extends React.Component {\n\n  constructor(props) {\n    super(props)\n    this.state = {\n      itemList: this.props.navigation.state.params.itemList,\n      input: \"Add a task\",\n      buttonType: this.props.navigation.state.params.buttonType\n    }\n  }\n\n  onChangeText = (e) => {\n    console.log(e.target.value)\n    this.setState({\n      input: e.target.value\n    })\n  }\n\n  render() {\n    return (\n      <View style={styles.container}>\n        <TextInput style={styles.input} value={this.state.input} onChangeText={(searchtext) => this.setState({ input: searchtext })}/>\n        <TouchableOpacity onPress={() => {\n                      let arr = this.state.itemList\n                      let temp = []\n                      let largest = 0;\n                      for (let i = 0; i<this.state.itemList.length; i++) {\n                        if (parseInt(this.state.itemList[i].id)>largest) {\n                          largest = this.state.itemList[i].id;\n                        }\n                      }\n                      if (this.state.input !== \"\") {\n                        arr.push({id: largest+1, \n                                task: this.state.input, \n                                checked: false, \n                                minute: 25, \n                                second: \"00\"\n                                })\n                        this.props.navigation.navigate('Dashboard', {array: arr})\n                      } \n                      else {\n                        this.props.navigation.navigate('Dashboard', {array: this.state.itemList})\n                      }\n                      \n                      }\n                      }>\n          <Text>{this.state.buttonType}</Text>\n        </TouchableOpacity>\n      </View>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    flexDirection: \"row\",\n    alignItems: \"center\",\n    justifyContent: \"center\"\n  },\n  input: {\n    marginRight: 10,\n    height: 20, borderColor: 'gray', borderWidth: 1\n  }\n\n});\n\nexport default CreateUpdateComponent;"]},"metadata":{},"sourceType":"module"}