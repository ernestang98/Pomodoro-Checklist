{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"/Users/ernestang98/Downloads/capstone-project/components/CreateUpdateComponent.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport * as React from 'react';\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport ImageBackground from \"react-native-web/dist/exports/ImageBackground\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nvar image = {\n  uri: \"https://cdn.wallpapersafari.com/34/21/pUSiGt.jpg\"\n};\n\nvar CreateUpdateComponent = function (_React$Component) {\n  _inherits(CreateUpdateComponent, _React$Component);\n\n  var _super = _createSuper(CreateUpdateComponent);\n\n  function CreateUpdateComponent(props) {\n    var _this;\n\n    _classCallCheck(this, CreateUpdateComponent);\n\n    _this = _super.call(this, props);\n    _this.state = {\n      itemList: _this.props.navigation.state.params.itemList,\n      input: \"Add a task\",\n      buttonType: _this.props.navigation.state.params.buttonType\n    };\n    return _this;\n  }\n\n  _createClass(CreateUpdateComponent, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(View, {\n        style: styles.container\n      }, React.createElement(ImageBackground, {\n        source: image,\n        style: styles.image,\n        imageStyle: {\n          opacity: 0.8\n        }\n      }, React.createElement(View, null, React.createElement(TextInput, {\n        style: styles.input,\n        value: this.state.input,\n        onChangeText: function onChangeText(searchtext) {\n          return _this2.setState({\n            input: searchtext\n          });\n        }\n      }), React.createElement(TouchableOpacity, {\n        onPress: function onPress() {\n          var arr = _this2.state.itemList;\n          var temp = [];\n          var largest = 0;\n\n          for (var i = 0; i < _this2.state.itemList.length; i++) {\n            if (parseInt(_this2.state.itemList[i].id) > largest) {\n              largest = _this2.state.itemList[i].id;\n            }\n          }\n\n          if (_this2.state.input !== \"\") {\n            arr.push({\n              id: largest + 1,\n              task: _this2.state.input,\n              checked: false,\n              minute: 25,\n              second: \"00\"\n            });\n\n            _this2.props.navigation.navigate('Dashboard', {\n              array: arr\n            });\n          } else {\n            _this2.props.navigation.navigate('Dashboard', {\n              array: _this2.state.itemList\n            });\n          }\n        }\n      }, React.createElement(Text, null, this.state.buttonType)))));\n    }\n  }]);\n\n  return CreateUpdateComponent;\n}(React.Component);\n\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: \"white\",\n    justifyContent: \"center\"\n  },\n  input: {\n    marginRight: 10,\n    height: 20,\n    borderColor: 'gray',\n    borderWidth: 1\n  },\n  image: {\n    flex: 1,\n    resizeMode: \"cover\",\n    justifyContent: \"center\"\n  }\n});\nexport default CreateUpdateComponent;","map":{"version":3,"sources":["/Users/ernestang98/Downloads/capstone-project/components/CreateUpdateComponent.js"],"names":["React","image","uri","CreateUpdateComponent","props","state","itemList","navigation","params","input","buttonType","styles","container","opacity","searchtext","setState","arr","temp","largest","i","length","parseInt","id","push","task","checked","minute","second","navigate","array","Component","StyleSheet","create","flex","backgroundColor","justifyContent","marginRight","height","borderColor","borderWidth","resizeMode"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport { Text, View, StyleSheet, Button, ImageBackground, TouchableOpacity, TextInput } from 'react-native';\n\nconst image = { uri: \"https://cdn.wallpapersafari.com/34/21/pUSiGt.jpg\" };\n\nclass CreateUpdateComponent extends React.Component {\n\n  constructor(props) {\n    super(props)\n    this.state = {\n      itemList: this.props.navigation.state.params.itemList,\n      input: \"Add a task\",\n      buttonType: this.props.navigation.state.params.buttonType\n    }\n  }\n\n  render() {\n    return (\n      <View style={styles.container}>\n        <ImageBackground source={image} style={styles.image} imageStyle={{opacity:0.8}}>\n          <View>\n            <TextInput style={styles.input} value={this.state.input} onChangeText={(searchtext) => this.setState({ input: searchtext })}/>\n            <TouchableOpacity onPress={() => {\n                          let arr = this.state.itemList\n                          let temp = []\n                          let largest = 0;\n                          for (let i = 0; i<this.state.itemList.length; i++) {\n                            if (parseInt(this.state.itemList[i].id)>largest) {\n                              largest = this.state.itemList[i].id;\n                            }\n                          }\n                          if (this.state.input !== \"\") {\n                            arr.push({id: largest+1, \n                                    task: this.state.input, \n                                    checked: false, \n                                    minute: 25, \n                                    second: \"00\"\n                                    })\n                            this.props.navigation.navigate('Dashboard', {array: arr})\n                          } \n                          else {\n                            this.props.navigation.navigate('Dashboard', {array: this.state.itemList})\n                          }\n                          \n                          }\n                          }>\n              <Text>{this.state.buttonType}</Text>\n            </TouchableOpacity>\n          </View>\n        </ImageBackground>\n      </View>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: \"white\",\n    justifyContent: \"center\",\n  },\n  input: {\n    marginRight: 10,\n    height: 20, borderColor: 'gray', borderWidth: 1\n  },\n  image: {\n    flex: 1,\n    resizeMode: \"cover\",\n    justifyContent: \"center\"\n  }\n});\n\nexport default CreateUpdateComponent;"]},"metadata":{},"sourceType":"module"}