{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"/Users/ernestang98/Downloads/capstone-project/components/DashboardComponent.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport * as React from 'react';\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\n\nvar DashboardComponent = function (_React$Component) {\n  _inherits(DashboardComponent, _React$Component);\n\n  var _super = _createSuper(DashboardComponent);\n\n  function DashboardComponent(props) {\n    var _this;\n\n    _classCallCheck(this, DashboardComponent);\n\n    _this = _super.call(this, props);\n\n    _this.renderItem = function (_ref) {\n      var item = _ref.item;\n      return React.createElement(View, {\n        style: styles.data\n      }, React.createElement(View, {\n        style: {\n          flexDirection: \"row\"\n        }\n      }, React.createElement(Text, null, \"Checkbox\"), React.createElement(TouchableOpacity, {\n        onPress: function onPress() {\n          console.log(item.id);\n\n          for (var i = 0; i < _this.state.itemList.length; i++) {\n            if (_this.state.itemList[i].id === item.id) {\n              var data = _this.state.itemList[i];\n\n              _this.props.navigation.navigate('Focus', {\n                minute: data.minute,\n                second: data.second,\n                task: data.task,\n                data: _this.state.itemList,\n                id: item.id\n              });\n            }\n          }\n        }\n      }, React.createElement(Text, null, item.task))), React.createElement(View, {\n        style: {\n          flexDirection: \"row\"\n        }\n      }, React.createElement(View, null, React.createElement(TouchableOpacity, null, React.createElement(Text, null, \"Edit\"))), React.createElement(View, null, React.createElement(TouchableOpacity, {\n        onPress: function onPress() {\n          return _this.deleteOperation(item.id);\n        }\n      }, React.createElement(Text, null, \"Delete\")))));\n    };\n\n    _this.deleteOperation = function (id) {\n      var array = [];\n\n      for (var i = 0; i < _this.state.itemList.length; i++) {\n        if (_this.state.itemList[i].id !== id) array.push(_this.state.itemList[i]);\n      }\n\n      _this.setState({\n        itemList: array\n      });\n    };\n\n    _this.resetOperation = function () {\n      _this.setState({});\n    };\n\n    console.log(props.navigation.state.params);\n\n    if (props.navigation.state.params === undefined) {\n      _this.state = {\n        itemList: [{\n          id: 1,\n          task: \"Task 1\",\n          checked: false,\n          minute: 25,\n          second: \"00\"\n        }, {\n          id: 2,\n          task: \"Task 2\",\n          checked: false,\n          minute: 25,\n          second: \"00\"\n        }, {\n          id: 3,\n          task: \"Task 3\",\n          checked: false,\n          minute: 25,\n          second: \"00\"\n        }],\n        newItem: ''\n      };\n    } else {\n      _this.state = {\n        itemList: props.navigation.state.params.array,\n        newItem: ''\n      };\n    }\n\n    return _this;\n  }\n\n  _createClass(DashboardComponent, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(View, {\n        style: styles.container\n      }, React.createElement(TouchableOpacity, {\n        onPress: function onPress() {\n          _this2.props.navigation.navigate('CreateUpdate', {\n            itemList: _this2.state.itemList,\n            buttonType: \"add\"\n          });\n        }\n      }, React.createElement(Text, null, \"Add\")), React.createElement(View, {\n        style: styles.header\n      }, React.createElement(TextInput, {\n        style: {\n          height: 20,\n          borderColor: 'gray',\n          borderWidth: 1\n        },\n        onChange: this.handleChange\n      })), React.createElement(FlatList, {\n        style: styles.flatList,\n        data: this.state.itemList,\n        renderItem: this.renderItem,\n        keyExtractor: function keyExtractor(item) {\n          return item.id;\n        }\n      }));\n    }\n  }]);\n\n  return DashboardComponent;\n}(React.Component);\n\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: \"white\",\n    paddingTop: 20\n  },\n  data: {\n    flex: 1,\n    flexDirection: \"row\",\n    justifyContent: \"center\",\n    alignItems: \"center\"\n  },\n  header: {\n    flexDirection: \"row\",\n    justifyContent: \"center\"\n  }\n});\nexport default DashboardComponent;","map":{"version":3,"sources":["/Users/ernestang98/Downloads/capstone-project/components/DashboardComponent.js"],"names":["React","DashboardComponent","props","renderItem","item","styles","data","flexDirection","console","log","id","i","state","itemList","length","navigation","navigate","minute","second","task","deleteOperation","array","push","setState","resetOperation","params","undefined","checked","newItem","container","buttonType","header","height","borderColor","borderWidth","handleChange","flatList","Component","StyleSheet","create","flex","backgroundColor","paddingTop","justifyContent","alignItems"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport { Text, View, StyleSheet, Button, FlatList, TouchableOpacity, TextInput } from 'react-native';\n\nclass DashboardComponent extends React.Component {\n\n  constructor(props) {\n    super(props)\n    console.log(props.navigation.state.params)\n    if (props.navigation.state.params === undefined) {\n      this.state = {\n        itemList: [\n          {id: 1, task: \"Task 1\", checked: false, minute: 25, second: \"00\"},\n          {id: 2, task: \"Task 2\", checked: false, minute: 25, second: \"00\"},\n          {id: 3, task: \"Task 3\", checked: false, minute: 25, second: \"00\"},\n        ],\n        newItem: ''\n      }\n    }\n    else {\n      this.state = {\n      itemList: props.navigation.state.params.array,\n      newItem: ''\n      }\n    }\n  }\n\n  renderItem = ({ item }) => {\n    return <View style={styles.data}>\n\n            <View style={{flexDirection: \"row\"}}>\n                <Text>Checkbox</Text>\n                <TouchableOpacity onPress={()=>{\n                                          console.log(item.id)\n                                          for (let i = 0; i < this.state.itemList.length; i++) {\n                                            if (this.state.itemList[i].id === item.id) {\n                                              let data = this.state.itemList[i]\n                                              this.props.navigation.navigate('Focus', {\n                                                minute: data.minute,\n                                                second: data.second,\n                                                task: data.task,\n                                                data: this.state.itemList,\n                                                id: item.id\n                                              })\n                                            }\n                                          }\n                                          }}>\n                  <Text>{item.task}</Text>\n                </TouchableOpacity>\n            </View>\n\n            <View style={{flexDirection: \"row\"}}>\n\n              <View>\n                <TouchableOpacity>\n                  <Text>Edit</Text>\n                </TouchableOpacity>\n              </View>\n\n              <View>\n                <TouchableOpacity onPress={()=>this.deleteOperation(item.id)}>\n                  <Text>Delete</Text>\n                </TouchableOpacity>\n              </View>\n\n            </View>\n\n          </View>\n  };\n\n  \n  deleteOperation = (id) => {\n    let array = []\n    for (let i = 0; i < this.state.itemList.length; i++) {\n      if (this.state.itemList[i].id !== id) array.push(this.state.itemList[i])\n    }\n    this.setState({\n      itemList: array\n    })\n  }\n\n  resetOperation = () => {\n    this.setState({\n\n    })\n  }\n  \n\n\n  render() {\n    return (\n      <View style={styles.container}>\n        <TouchableOpacity onPress={() => {this.props.navigation.navigate('CreateUpdate', {\n                                  itemList:this.state.itemList,\n                                  buttonType: \"add\"\n                                  })}}>\n            <Text>Add</Text>\n        </TouchableOpacity>\n        <View style={styles.header}>\n          <TextInput style={{ height: 20, borderColor: 'gray', borderWidth: 1 }} \n          onChange={this.handleChange}/>\n        </View>\n        <FlatList\n          style={styles.flatList}\n          data={this.state.itemList}\n          renderItem={this.renderItem}\n          keyExtractor={(item) => item.id}  \n        />\n      </View>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n      flex: 1,\n      backgroundColor: \"white\",\n      paddingTop: 20,\n    },\n  data: {\n    flex: 1,\n    flexDirection: \"row\",\n    justifyContent: \"center\",\n    alignItems: \"center\"\n  },\n  header: {\n    flexDirection:\"row\",\n    justifyContent:\"center\"\n  }\n});\n\nexport default DashboardComponent;"]},"metadata":{},"sourceType":"module"}